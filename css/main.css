@import url("https://fonts.googleapis.com/css?family=Roboto:300,400,500&subset=latin-ext");
/* CSS RESET */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  font-family: 'Roboto', sans-serif;
  background-color: #fafafa;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* Basic layout */
#header {
  display: flex;
  background-color: #283593;
  color: white;
  box-shadow: 0px 1px 5px 1px rgba(0, 0, 0, 0.3);
}

#header .burger {
  width: 65px;
  height: 65px;
  color: white;
  box-sizing: border-box;
}

#header .burger:hover {
  background-color: transparent;
}

#header .burger.rotate {
  transform: rotate(-180deg);
}

#header h1 {
  width: 100%;
  font-size: 1.5rem;
  padding: 20px 0;
}

#content {
  display: flex;
  padding-top: 25px;
  box-sizing: border-box;
}

#content #left-col {
  width: 240px;
  transition-duration: 0.5s;
  -webkit-transition-duration: 0.5s;
  /* Safari */
}

#content #left-col.hide-menu {
  width: 40px;
}

@media only screen and (max-width: 500px) {
  #content #left-col {
    width: 40px;
  }
}

#content #right-col {
  width: 100%;
  position: relative;
  background-color: white;
  box-shadow: 0px 1px 5px 1px rgba(0, 0, 0, 0.3);
  margin: 0 10px;
  overflow: hidden;
}

#content .right-col-top {
  padding: 18px;
  display: flex;
}

#content .right-col-top h2 {
  width: 100%;
  font-size: 1.5rem;
}

#content .right-col-top .icon-b {
  margin-left: 25px;
}

/* Buttons */
::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: #737373;
  font-size: 1.2em;
}

::-moz-placeholder {
  /* Firefox 19+ */
  color: #737373;
  font-size: 1.2em;
}

:-ms-input-placeholder {
  /* IE 10+ */
  color: #737373;
  font-size: 1.2em;
}

:-moz-placeholder {
  /* Firefox 18- */
  color: #737373;
  font-size: 1.2em;
}

.icon-b {
  background-color: transparent;
  border: 0;
  display: flex;
  position: relative;
  text-transform: uppercase;
  cursor: pointer;
  color: #283593;
  white-space: nowrap;
  border-radius: 3px;
  padding: 2px 7px;
  transition-duration: 0.5s;
  -webkit-transition-duration: 0.5s;
  /* Safari */
}

.icon-b span {
  margin: auto;
  padding-left: 10px;
  font-weight: 500;
}

.icon-b i {
  margin: auto;
}

.icon-b:hover {
  color: #fff;
  background-color: #283593;
}

.icon-b:focus {
  outline: none;
}

.custom-check {
  display: none;
}

.custom-check:checked + label::after {
  content: "\2713";
  font-size: 20px;
  padding: 3px;
  color: #283593;
}

.custom-check + label {
  font-size: 0;
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid #212121;
  border-radius: 4px;
  cursor: pointer;
}

.log-out-b {
  color: white;
}

.log-out-b span {
  padding: 2px 15px 0 30px;
}

.list-box-nav {
  text-align: right;
  display: flex;
  justify-content: flex-end;
  padding: 20px;
}

.list-box-nav div {
  margin: auto 0;
}

.list-box-nav a {
  text-transform: uppercase;
  color: #283593;
  text-decoration: none;
  font-weight: 500;
}

.list-box-nav a i {
  position: relative;
  top: 5px;
}

.list-box-nav .list-box-nav-total {
  padding: 10px;
}

.list-box-nav .list-box-nav-number a {
  padding: 0 40px;
}

.custom-input {
  border: 0;
  border-bottom: 1px solid #737373;
  width: 220px;
  padding: 6px 0;
}

.custom-input:focus {
  outline: none;
}

/* login page */
#layout.login {
  display: flex;
  height: 100%;
  background-image: url(../img/bg-login.jpg);
  background-position: 50%;
}

#layout.login #login-box {
  margin: auto;
  background-color: white;
  padding: 16px;
  text-align: center;
  width: 100%;
  max-width: 300px;
  box-sizing: border-box;
  border-radius: 3px;
}

#layout.login #login-box input, #layout.login #login-box label {
  width: 100%;
  display: block;
}

#layout.login #login-box .login-box-ico {
  display: inline-block;
  background-color: #f50057;
  color: white;
  padding: 8px;
  border-radius: 50px;
}

#layout.login #login-box .login-box-text {
  padding: 15px 0 30px 0;
  color: #a79eaa;
}

#layout.login #login-box input[type=submit] {
  background-color: #3f51b5;
  border: 0;
  color: white;
  text-transform: uppercase;
  padding: 10px;
  font-size: 0.8em;
  margin-top: 17px;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0px 1px 5px 1px rgba(0, 0, 0, 0.3);
}

#layout.login #login-box label {
  text-align: left;
  width: 100%;
  font-size: 0.8em;
  margin: 20px 0 5px 0;
  color: #b6afb7;
}

#layout.login #login-box input:required:invalid {
  border-bottom: 3px solid #f50057;
  box-sizing: border-box;
  padding: 5px 0;
}

#layout.login #login-box input:required:invalid::-webkit-input-placeholder {
  color: #f50057;
}

#layout.login #login-box input:required:invalid + span {
  opacity: 1;
}

#layout.login #login-box input + span {
  opacity: 0;
  display: block;
  text-align: left;
  color: #f50057;
  font-size: 0.85em;
  margin-top: 7px;
}

/* Vertical menu */
.menu ul li a {
  position: relative;
  line-height: 29px;
  overflow: hidden;
  display: block;
  padding: 10px 10px 10px 50px;
  text-decoration: none;
  color: #737373;
  transition-duration: 0.5s;
  -webkit-transition-duration: 0.5s;
  /* Safari */
}

.menu ul li a i {
  padding: 13px;
  position: absolute;
  top: 0;
  left: 0;
}

.menu ul li a:hover {
  background-color: #f1f1f1;
}

.menu ul li a::after {
  content: "";
  display: block;
  height: 10px;
  width: 100%;
  background-color: #ececec;
  position: absolute;
  bottom: 0;
  left: 0;
  opacity: 0;
}

.menu ul li a:hover::after {
  opacity: 1;
}

.menu ul li .active {
  color: #212121;
}

/* Categories list */
.list-box-content ul li {
  display: flex;
  padding: 15px;
  border-bottom: 1px solid #e0e0e0;
}

.list-box-content ul div {
  margin: auto 0;
}

.list-box-content ul .check-col {
  width: 18%;
}

.list-box-content ul .name-col {
  width: 25%;
}

.list-box-content ul .icon-col {
  width: 35%;
}

/* posterss */
.posters-box .posters-box-head {
  text-align: right;
  padding: 25px;
}

.posters-box .posters-box-pictures {
  display: flex;
  flex-wrap: wrap;
  justify-content: start;
  overflow: hidden;
}

.posters-box .posters-box-pictures .posters-box-item {
  width: 25%;
  box-sizing: border-box;
  position: relative;
  justify-content: left;
  border: 3px solid white;
}

.posters-box .posters-box-pictures .posters-box-item:nth-child(4n+1) {
  border-left: 0px;
}

.posters-box .posters-box-pictures .posters-box-item img {
  width: 100%;
  height: auto;
}

.posters-box .posters-box-pictures .posters-box-item .posters-box-item-bar {
  position: absolute;
  left: 0;
  bottom: 0;
  display: flex;
  width: 100%;
  box-sizing: border-box;
  color: white;
  padding: 15px;
  background: rgba(0, 0, 0, 0.09);
  background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(0, 0, 0, 0.09)), color-stop(100%, rgba(0, 0, 0, 0.83)));
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.09) 0%, rgba(0, 0, 0, 0.83) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#000000', GradientType=0 );
}

.posters-box .posters-box-pictures .posters-box-item .posters-box-item-bar .posters-box-item-bar-info {
  width: 100%;
  font-weight: 100;
  font-size: 0.9em;
}

.posters-box .posters-box-pictures .posters-box-item .posters-box-item-bar .icon-b {
  color: white;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
